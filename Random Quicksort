#include <iostream>
#include <vector>
#include <cstdlib> // For std::rand and std::srand
#include <ctime> // For std::time
void swap(int &a, int &b) {
int temp = a;
a = b;
b = temp;
}
// Function to partition the array
int partition(std::vector<int>& arr, int low, int high) {
int randomIndex = low + std::rand() % (high - low + 1);
swap(arr[randomIndex], arr[high]);
int pivot = arr[high];
int i = low - 1;
for (int j = low; j < high; j++) {
if (arr[j] <= pivot) {
i++;
swap(arr[i], arr[j]);
}
}
swap(arr[i + 1], arr[high]);
return i + 1;
}
// Randomized Quick Sort function
void randomizedQuickSort(std::vector<int>& arr, int low, int high) {
if (low < high) {
int pivotIndex = partition(arr, low, high);
randomizedQuickSort(arr, low, pivotIndex - 1);

randomizedQuickSort(arr, pivotIndex + 1, high);
}
}
int main() {
// Function for a random number generator
std::srand(std::time(0));
int n;
std::cout << "Enter the number of elements: ";
std::cin >> n;
std::vector<int> arr(n);
std::cout << "Enter " << n << " elements:\n";
for (int i = 0; i < n; ++i) {
std::cin >> arr[i];
}
randomizedQuickSort(arr, 0, n - 1);
std::cout << "Sorted array:\n";
for (int i = 0; i < n; ++i) {
std::cout << arr[i] << " ";
}
std::cout << std::endl;
return 0;
}
